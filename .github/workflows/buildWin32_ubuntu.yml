name: Static Build ONNX Runtime

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.ref || github.sha }}
  cancel-in-progress: true

jobs:
  build_win32_static:
    name: Build Windows 32-bit Static
    runs-on: windows-latest
    timeout-minutes: 300

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: x86

      - name: Install dependencies
        shell: cmd
        run: |
          choco install cmake ninja -y
          python -m pip install -r "${{ github.workspace }}\tools\ci_build\github\windows\python\requirements.txt"

      - name: Configure static build
        shell: cmd
        run: |
          cmake -S "${{ github.workspace }}" -B build -G Ninja ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_SYSTEM_VERSION=10.0.19041.0 ^
            -A Win32 ^
            -Donnxruntime_BUILD_SHARED_LIB=OFF ^
            -Donnxruntime_ENABLE_PYTHON=OFF ^
            -Donnxruntime_BUILD_UNIT_TESTS=OFF ^
            -Donnxruntime_USE_PREINSTALLED_EIGEN=ON ^
            -Donnxruntime_USE_CUDA=OFF ^
            -Donnxruntime_USE_DNNL=OFF ^
            -Donnxruntime_USE_TENSORRT=OFF ^
            -Donnxruntime_USE_MKLML=OFF ^
            -Donnxruntime_USE_OPENVINO=OFF ^
            -Donnxruntime_USE_OPENMP=ON ^
            -DCMAKE_CXX_FLAGS="/MT" ^
            -DCMAKE_C_FLAGS="/MT"

      - name: Build static library
        shell: cmd
        run: |
          cmake --build build --config Release --target onnxruntime
          
      - name: Package artifacts
        shell: cmd
        run: |
          7z a -tzip onnxruntime-win32-static.zip build\Release\onnxruntime.lib
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: onnxruntime-win32-static
          path: onnxruntime-win32-static.zip

  build_ubuntu64_static:
    name: Build Ubuntu 64-bit Static
    runs-on: ubuntu-latest
    timeout-minutes: 300

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build build-essential python3-pip
          python3 -m pip install -r "${{ github.workspace }}/tools/ci_build/github/linux/python/requirements.txt"

      - name: Configure static build
        run: |
          cmake -S "${{ github.workspace }}" -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -Donnxruntime_BUILD_SHARED_LIB=OFF \
            -Donnxruntime_ENABLE_PYTHON=OFF \
            -Donnxruntime_BUILD_UNIT_TESTS=OFF \
            -Donnxruntime_USE_PREINSTALLED_EIGEN=ON \
            -Donnxruntime_USE_CUDA=OFF \
            -Donnxruntime_USE_DNNL=OFF \
            -Donnxruntime_USE_TENSORRT=OFF \
            -Donnxruntime_USE_MKLML=OFF \
            -Donnxruntime_USE_OPENVINO=OFF \
            -Donnxruntime_USE_OPENMP=ON \
            -DCMAKE_CXX_FLAGS="-static-libgcc -static-libstdc++" \
            -DCMAKE_C_FLAGS="-static-libgcc"

      - name: Build static library
        run: |
          cmake --build build --config Release --target onnxruntime
          
      - name: Package artifacts
        run: |
          zip -r onnxruntime-ubuntu64-static.zip build/libonnxruntime.a
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: onnxruntime-ubuntu64-static
          path: onnxruntime-ubuntu64-static.zip
